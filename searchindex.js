Search.setIndex({docnames:["authors","contributing","flloat","flloat.base","flloat.parser","flloat.semantics","flloat.syntax","history","index","installation","modules","readme","usage"],envversion:{"sphinx.domains.c":1,"sphinx.domains.changeset":1,"sphinx.domains.cpp":1,"sphinx.domains.javascript":1,"sphinx.domains.math":2,"sphinx.domains.python":1,"sphinx.domains.rst":1,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:55},filenames:["authors.rst","contributing.rst","flloat.rst","flloat.base.rst","flloat.parser.rst","flloat.semantics.rst","flloat.syntax.rst","history.rst","index.rst","installation.rst","modules.rst","readme.rst","usage.rst"],objects:{"":{flloat:[2,0,0,"-"]},"flloat.base":{Alphabet:[3,0,0,"-"],Formula:[3,0,0,"-"],Interpretation:[3,0,0,"-"],Symbol:[3,0,0,"-"],Symbols:[3,0,0,"-"],convertible:[3,0,0,"-"],hashable:[3,0,0,"-"],misc:[3,0,0,"-"],nnf:[3,0,0,"-"],parsing:[3,0,0,"-"],truths:[3,0,0,"-"]},"flloat.base.Alphabet":{AlphabetConstructor:[3,1,1,""]},"flloat.base.Alphabet.AlphabetConstructor":{fromStrings:[3,2,1,""]},"flloat.base.Formula":{AtomicFormula:[3,1,1,""],BinaryOperator:[3,1,1,""],CommutativeBinaryOperator:[3,1,1,""],Formula:[3,1,1,""],Operator:[3,1,1,""],UnaryOperator:[3,1,1,""]},"flloat.base.Formula.AtomicFormula":{find_labels:[3,3,1,""]},"flloat.base.Formula.BinaryOperator":{find_labels:[3,3,1,""]},"flloat.base.Formula.CommutativeBinaryOperator":{find_labels:[3,3,1,""],simplify:[3,3,1,""]},"flloat.base.Formula.Formula":{find_labels:[3,3,1,""],simplify:[3,3,1,""]},"flloat.base.Formula.Operator":{base_expression:[3,4,1,""],operator_symbol:[3,4,1,""]},"flloat.base.Formula.UnaryOperator":{find_labels:[3,3,1,""]},"flloat.base.Interpretation":{Interpretation:[3,1,1,""]},"flloat.base.Symbol":{ConstantSymbol:[3,1,1,""],FalseSymbol:[3,1,1,""],FunctionSymbol:[3,1,1,""],LastSymbol:[3,1,1,""],PredicateSymbol:[3,1,1,""],Symbol:[3,1,1,""],TrueSymbol:[3,1,1,""]},"flloat.base.Symbols":{Symbols:[3,1,1,""]},"flloat.base.Symbols.Symbols":{ALWAYS:[3,4,1,""],ALWAYS_BRACKET_LEFT:[3,4,1,""],ALWAYS_BRACKET_RIGHT:[3,4,1,""],AND:[3,4,1,""],CARET:[3,4,1,""],END:[3,4,1,""],EQUAL:[3,4,1,""],EQUIVALENCE:[3,4,1,""],EVENTUALLY:[3,4,1,""],EVENTUALLY_BRACKET_LEFT:[3,4,1,""],EVENTUALLY_BRACKET_RIGHT:[3,4,1,""],FALSE:[3,4,1,""],IMPLIES:[3,4,1,""],LAST:[3,4,1,""],LOGICAL_FALSE:[3,4,1,""],LOGICAL_TRUE:[3,4,1,""],LTLf_LAST:[3,4,1,""],NEXT:[3,4,1,""],NOT:[3,4,1,""],OR:[3,4,1,""],PATH_SEQUENCE:[3,4,1,""],PATH_STAR:[3,4,1,""],PATH_TEST:[3,4,1,""],PATH_UNION:[3,4,1,""],RELEASE:[3,4,1,""],ROUND_BRACKET_LEFT:[3,4,1,""],ROUND_BRACKET_RIGHT:[3,4,1,""],TRUE:[3,4,1,""],UNTIL:[3,4,1,""],WEAK_NEXT:[3,4,1,""]},"flloat.base.convertible":{BaseConvertibleFormula:[3,1,1,""],ConvertibleFormula:[3,1,1,""],DeltaConvertibleFormula:[3,1,1,""],EquivalenceConvertible:[3,1,1,""],EquivalenceDeltaConvertible:[3,1,1,""],ImpliesConvertible:[3,1,1,""],ImpliesDeltaConvertible:[3,1,1,""]},"flloat.base.convertible.BaseConvertibleFormula":{negate:[3,3,1,""],truth:[3,3,1,""]},"flloat.base.convertible.EquivalenceConvertible":{And:[3,4,1,""],Not:[3,4,1,""],Or:[3,4,1,""]},"flloat.base.convertible.ImpliesConvertible":{And:[3,4,1,""],Not:[3,4,1,""],Or:[3,4,1,""]},"flloat.base.hashable":{Hashable:[3,1,1,""]},"flloat.base.misc":{Delta:[3,1,1,""]},"flloat.base.misc.Delta":{delta:[3,3,1,""]},"flloat.base.nnf":{DualBinaryOperatorNNF:[3,1,1,""],DualCommutativeOperatorNNF:[3,1,1,""],DualNNF:[3,1,1,""],DualUnaryOperatorNNF:[3,1,1,""],NNF:[3,1,1,""],NotNNF:[3,1,1,""]},"flloat.base.nnf.DualBinaryOperatorNNF":{negate:[3,3,1,""]},"flloat.base.nnf.DualNNF":{Dual:[3,4,1,""]},"flloat.base.nnf.DualUnaryOperatorNNF":{Not:[3,4,1,""],negate:[3,3,1,""]},"flloat.base.nnf.NNF":{negate:[3,3,1,""],to_nnf:[3,4,1,""]},"flloat.base.nnf.NotNNF":{negate:[3,3,1,""]},"flloat.base.parsing":{Lexer:[3,1,1,""],Parser:[3,1,1,""]},"flloat.base.parsing.Lexer":{build:[3,3,1,""],t_error:[3,3,1,""],t_ignore:[3,4,1,""],t_newline:[3,3,1,""],tokens:[3,4,1,""]},"flloat.base.parsing.Parser":{p_error:[3,3,1,""]},"flloat.base.truths":{AndTruth:[3,1,1,""],EquivalenceTruth:[3,1,1,""],ImpliesTruth:[3,1,1,""],NotTruth:[3,1,1,""],OrTruth:[3,1,1,""],Truth:[3,1,1,""]},"flloat.base.truths.AndTruth":{operator_symbol:[3,4,1,""],truth:[3,3,1,""]},"flloat.base.truths.EquivalenceTruth":{operator_symbol:[3,4,1,""],truth:[3,3,1,""]},"flloat.base.truths.ImpliesTruth":{operator_symbol:[3,4,1,""],truth:[3,3,1,""]},"flloat.base.truths.NotTruth":{operator_symbol:[3,4,1,""],truth:[3,3,1,""]},"flloat.base.truths.OrTruth":{operator_symbol:[3,4,1,""],truth:[3,3,1,""]},"flloat.base.truths.Truth":{truth:[3,3,1,""]},"flloat.flloat":{DFAOTF:[2,1,1,""],find_atomics:[2,5,1,""],to_automaton:[2,5,1,""],to_automaton_:[2,5,1,""]},"flloat.flloat.DFAOTF":{get_current_state:[2,3,1,""],is_true:[2,3,1,""],make_transition:[2,3,1,""],reset:[2,3,1,""],word_acceptance:[2,3,1,""]},"flloat.parser":{ldlf:[4,0,0,"-"],ltlf:[4,0,0,"-"],pl:[4,0,0,"-"]},"flloat.parser.ldlf":{LDLfLexer:[4,1,1,""],LDLfParser:[4,1,1,""]},"flloat.parser.ldlf.LDLfLexer":{reserved:[4,4,1,""],t_AND:[4,4,1,""],t_ATOM:[4,3,1,""],t_BOXLSEPARATOR:[4,4,1,""],t_BOXRSEPARATOR:[4,4,1,""],t_DIAMONDLSEPARATOR:[4,4,1,""],t_DIAMONDRSEPARATOR:[4,4,1,""],t_EQUIVALENCE:[4,4,1,""],t_IMPLIES:[4,4,1,""],t_LPAREN:[4,4,1,""],t_NOT:[4,4,1,""],t_OR:[4,4,1,""],t_RPAREN:[4,4,1,""],t_SEQ:[4,4,1,""],t_STAR:[4,4,1,""],t_TEST:[4,4,1,""],t_UNION:[4,4,1,""],tokens:[4,4,1,""]},"flloat.parser.ldlf.LDLfParser":{p_expr_paren:[4,3,1,""],p_path:[4,3,1,""],p_propositional:[4,3,1,""],p_temp_formula:[4,3,1,""]},"flloat.parser.ltlf":{LTLfLexer:[4,1,1,""],LTLfParser:[4,1,1,""]},"flloat.parser.ltlf.LTLfLexer":{reserved:[4,4,1,""],t_ALWAYS:[4,4,1,""],t_AND:[4,4,1,""],t_ATOM:[4,3,1,""],t_EQUIVALENCE:[4,4,1,""],t_EVENTUALLY:[4,4,1,""],t_IMPLIES:[4,4,1,""],t_LPAREN:[4,4,1,""],t_NEXT:[4,4,1,""],t_NOT:[4,4,1,""],t_OR:[4,4,1,""],t_RELEASE:[4,4,1,""],t_RPAREN:[4,4,1,""],t_UNTIL:[4,4,1,""],tokens:[4,4,1,""]},"flloat.parser.ltlf.LTLfParser":{p_expr_paren:[4,3,1,""],p_formula:[4,3,1,""]},"flloat.parser.pl":{PLLexer:[4,1,1,""],PLParser:[4,1,1,""]},"flloat.parser.pl.PLLexer":{reserved:[4,4,1,""],t_AND:[4,4,1,""],t_ATOM:[4,3,1,""],t_EQUIVALENCE:[4,4,1,""],t_IMPLIES:[4,4,1,""],t_LPAREN:[4,4,1,""],t_NOT:[4,4,1,""],t_OR:[4,4,1,""],t_RPAREN:[4,4,1,""],tokens:[4,4,1,""]},"flloat.parser.pl.PLParser":{p_formula_and:[4,3,1,""],p_formula_atom:[4,3,1,""],p_formula_equivalence:[4,3,1,""],p_formula_expression:[4,3,1,""],p_formula_implies:[4,3,1,""],p_formula_not:[4,3,1,""],p_formula_or:[4,3,1,""]},"flloat.semantics":{ldlf:[5,0,0,"-"],pl:[5,0,0,"-"]},"flloat.semantics.ldlf":{FiniteTrace:[5,1,1,""],FiniteTraceTruth:[5,1,1,""]},"flloat.semantics.ldlf.FiniteTrace":{fromStringSets:[5,6,1,""],fromSymbolSets:[5,6,1,""],get:[5,3,1,""],last:[5,3,1,""],length:[5,3,1,""],segment:[5,3,1,""]},"flloat.semantics.ldlf.FiniteTraceTruth":{truth:[5,3,1,""]},"flloat.semantics.pl":{PLFalseInterpretation:[5,1,1,""],PLTrueInterpretation:[5,1,1,""]},"flloat.syntax":{ldlf:[6,0,0,"-"],ltlf:[6,0,0,"-"],pl:[6,0,0,"-"]},"flloat.syntax.ldlf":{DeltaRegExp:[6,1,1,""],F:[6,1,1,""],LDLfAnd:[6,1,1,""],LDLfAtomic:[6,1,1,""],LDLfBox:[6,1,1,""],LDLfCommBinaryOperator:[6,1,1,""],LDLfDiamond:[6,1,1,""],LDLfEnd:[6,1,1,""],LDLfEquivalence:[6,1,1,""],LDLfFormula:[6,1,1,""],LDLfImplies:[6,1,1,""],LDLfLast:[6,1,1,""],LDLfLogicalFalse:[6,1,1,""],LDLfLogicalTrue:[6,1,1,""],LDLfNot:[6,1,1,""],LDLfOr:[6,1,1,""],LDLfPropositional:[6,1,1,""],LDLfTemporalFormula:[6,1,1,""],LDLfTemporalFormulaNNF:[6,1,1,""],RegExpFormula:[6,1,1,""],RegExpPropositional:[6,1,1,""],RegExpSequence:[6,1,1,""],RegExpStar:[6,1,1,""],RegExpTest:[6,1,1,""],RegExpTruth:[6,1,1,""],RegExpUnion:[6,1,1,""],T:[6,1,1,""]},"flloat.syntax.ldlf.DeltaRegExp":{deltaBox:[6,3,1,""],deltaDiamond:[6,3,1,""]},"flloat.syntax.ldlf.F":{delta:[6,3,1,""],find_labels:[6,3,1,""],negate:[6,3,1,""]},"flloat.syntax.ldlf.LDLfAnd":{Dual:[6,4,1,""]},"flloat.syntax.ldlf.LDLfAtomic":{find_labels:[6,3,1,""]},"flloat.syntax.ldlf.LDLfBox":{Dual:[6,4,1,""],temporal_brackets:[6,4,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.LDLfDiamond":{Dual:[6,4,1,""],temporal_brackets:[6,4,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.LDLfEquivalence":{And:[6,4,1,""],Not:[6,4,1,""],Or:[6,4,1,""]},"flloat.syntax.ldlf.LDLfFormula":{delta:[6,4,1,""],to_automaton:[6,3,1,""]},"flloat.syntax.ldlf.LDLfImplies":{And:[6,4,1,""],Not:[6,4,1,""],Or:[6,4,1,""]},"flloat.syntax.ldlf.LDLfLogicalFalse":{negate:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.LDLfLogicalTrue":{negate:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.LDLfNot":{negate:[6,3,1,""]},"flloat.syntax.ldlf.LDLfOr":{Dual:[6,4,1,""]},"flloat.syntax.ldlf.LDLfPropositional":{find_labels:[6,3,1,""]},"flloat.syntax.ldlf.LDLfTemporalFormula":{find_labels:[6,3,1,""],temporal_brackets:[6,4,1,""]},"flloat.syntax.ldlf.LDLfTemporalFormulaNNF":{negate:[6,3,1,""]},"flloat.syntax.ldlf.RegExpFormula":{negate:[6,3,1,""]},"flloat.syntax.ldlf.RegExpPropositional":{deltaBox:[6,3,1,""],deltaDiamond:[6,3,1,""],find_labels:[6,3,1,""],negate:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.RegExpSequence":{deltaBox:[6,3,1,""],deltaDiamond:[6,3,1,""],operator_symbol:[6,4,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.RegExpStar":{deltaBox:[6,3,1,""],deltaDiamond:[6,3,1,""],operator_symbol:[6,4,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.RegExpTest":{deltaBox:[6,3,1,""],deltaDiamond:[6,3,1,""],find_labels:[6,3,1,""],operator_symbol:[6,4,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.RegExpTruth":{truth:[6,3,1,""]},"flloat.syntax.ldlf.RegExpUnion":{deltaBox:[6,3,1,""],deltaDiamond:[6,3,1,""],operator_symbol:[6,4,1,""],truth:[6,3,1,""]},"flloat.syntax.ldlf.T":{delta:[6,3,1,""],find_labels:[6,3,1,""],negate:[6,3,1,""]},"flloat.syntax.ltlf":{LTLfAlways:[6,1,1,""],LTLfAnd:[6,1,1,""],LTLfAtomic:[6,1,1,""],LTLfCommBinaryOperator:[6,1,1,""],LTLfEnd:[6,1,1,""],LTLfEquivalence:[6,1,1,""],LTLfEventually:[6,1,1,""],LTLfFalse:[6,1,1,""],LTLfFormula:[6,1,1,""],LTLfImplies:[6,1,1,""],LTLfNext:[6,1,1,""],LTLfNot:[6,1,1,""],LTLfOr:[6,1,1,""],LTLfRelease:[6,1,1,""],LTLfTemporalFormula:[6,1,1,""],LTLfTrue:[6,1,1,""],LTLfTruth:[6,1,1,""],LTLfUntil:[6,1,1,""],LTLfWeakNext:[6,1,1,""]},"flloat.syntax.ltlf.LTLfAlways":{Dual:[6,4,1,""],Not:[6,4,1,""],operator_symbol:[6,4,1,""],to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfAnd":{Dual:[6,4,1,""],to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfAtomic":{find_labels:[6,3,1,""],negate:[6,3,1,""],to_LDLf:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.ltlf.LTLfEnd":{negate:[6,3,1,""]},"flloat.syntax.ltlf.LTLfEquivalence":{And:[6,4,1,""],Not:[6,4,1,""],Or:[6,4,1,""],to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfEventually":{Dual:[6,4,1,""],Not:[6,4,1,""],operator_symbol:[6,4,1,""],to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfFalse":{negate:[6,3,1,""]},"flloat.syntax.ltlf.LTLfFormula":{delta:[6,4,1,""],to_LDLf:[6,3,1,""],to_automaton:[6,3,1,""]},"flloat.syntax.ltlf.LTLfImplies":{And:[6,4,1,""],Not:[6,4,1,""],Or:[6,4,1,""],to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfNext":{Dual:[6,4,1,""],Not:[6,4,1,""],operator_symbol:[6,4,1,""],to_LDLf:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.ltlf.LTLfNot":{to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfOr":{Dual:[6,4,1,""],to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfRelease":{Dual:[6,4,1,""],operator_symbol:[6,4,1,""],to_LDLf:[6,3,1,""]},"flloat.syntax.ltlf.LTLfTrue":{negate:[6,3,1,""]},"flloat.syntax.ltlf.LTLfTruth":{truth:[6,3,1,""]},"flloat.syntax.ltlf.LTLfUntil":{negate:[6,3,1,""],operator_symbol:[6,4,1,""],to_LDLf:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.ltlf.LTLfWeakNext":{Dual:[6,4,1,""],Not:[6,4,1,""],operator_symbol:[6,4,1,""],to_LDLf:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.pl":{PLAnd:[6,1,1,""],PLAtomic:[6,1,1,""],PLBinaryOperator:[6,1,1,""],PLCommBinaryOperator:[6,1,1,""],PLEquivalence:[6,1,1,""],PLFalse:[6,1,1,""],PLFormula:[6,1,1,""],PLImplies:[6,1,1,""],PLNot:[6,1,1,""],PLOr:[6,1,1,""],PLTrue:[6,1,1,""],PLTruth:[6,1,1,""]},"flloat.syntax.pl.PLAnd":{Dual:[6,4,1,""]},"flloat.syntax.pl.PLAtomic":{find_labels:[6,3,1,""],negate:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.pl.PLEquivalence":{And:[6,4,1,""],Not:[6,4,1,""],Or:[6,4,1,""]},"flloat.syntax.pl.PLFalse":{find_labels:[6,3,1,""],negate:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.pl.PLFormula":{all_models:[6,3,1,""],find_atomics:[6,3,1,""],minimal_models:[6,4,1,""]},"flloat.syntax.pl.PLImplies":{And:[6,4,1,""],Not:[6,4,1,""],Or:[6,4,1,""]},"flloat.syntax.pl.PLOr":{Dual:[6,4,1,""]},"flloat.syntax.pl.PLTrue":{find_labels:[6,3,1,""],negate:[6,3,1,""],truth:[6,3,1,""]},"flloat.syntax.pl.PLTruth":{truth:[6,3,1,""]},"flloat.utils":{ObjConstructor:[2,1,1,""],ObjFactory:[2,1,1,""],powerset:[2,5,1,""],sym2regexp:[2,5,1,""]},"flloat.utils.ObjFactory":{"new":[2,3,1,""]},flloat:{base:[3,0,0,"-"],flloat:[2,0,0,"-"],parser:[4,0,0,"-"],semantics:[5,0,0,"-"],syntax:[6,0,0,"-"],utils:[2,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","classmethod","Python class method"],"3":["py","method","Python method"],"4":["py","attribute","Python attribute"],"5":["py","function","Python function"],"6":["py","staticmethod","Python static method"]},objtypes:{"0":"py:module","1":"py:class","2":"py:classmethod","3":"py:method","4":"py:attribute","5":"py:function","6":"py:staticmethod"},terms:{"0x7f5f5ac024e0":[2,3,5,6],"class":[2,3,4,5,6],"enum":3,"function":[1,3],"import":[11,12],"int":[3,5,6],"new":[1,2],"public":9,"return":[2,11],"static":5,"true":[2,3,4,6,11],AND:[3,4],And:[3,6],For:11,NOT:[3,4],Not:[3,6],The:[1,9,11],Then:1,_alphabet:6,_plinterpret:5,_plinterpretationconstructor:[2,3,5,6],abc:[3,6],about:[1,11],accept:2,action_set_list:2,actual:3,add:1,algorithm:6,alia:6,all:[1,2,6],all_model:6,alphabet:[2,6,10],alphabetconstructor:3,alwai:[1,3,4,9],always_bracket_left:3,always_bracket_right:3,andtruth:[3,6],ani:1,anyth:1,appreci:1,arg:[2,3,6],ariti:3,articl:1,assert:11,assum:1,atom:[2,4],atomicformula:[3,6],audreyr:11,automaton:[2,11],base:[2,4,5,6,10,11],base_express:3,baseconvertibleformula:[3,6],befor:1,best:1,binari:3,binaryoper:[3,6],bit:1,blog:1,bool:3,boxlsepar:4,boxrsepar:4,branch:[1,11],brute:6,bugfix:1,build:[2,3],bumpvers:1,can:[1,9],caret:3,chang:1,check:[1,11],checkout:1,classmethod:3,clone:[1,9],cls:2,com:[0,1,9,11],command:9,commit:1,commut:3,commutativebinaryoper:[3,6],complet:11,constantsymbol:3,content:[8,10],contribut:8,contributor:8,convers:[7,11],convert:[2,6,10],convertibleformula:[3,6],cookiecutt:11,copi:[1,9],could:1,creat:[1,11],credit:[1,8],curl:9,delta:[3,6],deltabox:6,deltaconvertibleformula:[3,6],deltadiamond:6,deltaregexp:6,deploi:8,deprec:2,descript:1,detail:1,determin:[2,6,11],develop:[1,8,11],dfa:[2,7,11],dfaotf:2,diamondlsepar:4,diamondrsepar:4,doc:[1,11],docstr:1,document:11,domain:2,don:9,done:1,download:9,driven:1,dual:[3,6],dualbinaryoperatornnf:[3,6],dualcommutativeoperatornnf:[3,6],dualnnf:[3,6],dualunaryoperatornnf:[3,6],dynam:[7,11],easier:1,effect:2,egg:11,either:9,end:[3,4,5,6],enhanc:1,entri:1,enumer:3,epsilon:[3,6],equal:3,equival:[3,4],equivalenceconvert:[3,6],equivalencedeltaconvert:[3,6],equivalencetruth:3,evalu:11,even:1,eventu:[3,4],eventually_bracket_left:3,eventually_bracket_right:3,everi:1,explain:1,extra:11,fals:[2,3,4,6],falsesymbol:3,favorito:0,featur:8,file:1,find:[2,6],find_atom:[2,6],find_label:[3,6,11],finit:[7,11],finitetrac:[5,6,11],finitetracetruth:[5,6],first:[0,7],flag:2,flake8:1,flloat:[1,9,12],fluent:2,fly:[2,7,11],follow:[7,11],forc:6,fork:1,formal:[7,11],formula:[2,4,6,7,10,11],free:11,from:[2,7,8,11],fromstr:3,fromstringset:[5,11],fromsymbolset:5,functionsymbol:3,gener:3,get:[5,8],get_current_st:2,git:[1,9,11],github:[1,9,11],given:[1,6],gmail:0,graphviz:11,greatli:1,guid:[9,11],guidelin:8,has:2,hashabl:[2,10],have:[1,9],help:1,here:1,histori:[1,8],how:[1,8],http:[1,9,11],idempot:[3,6],implement:[3,11],impli:[3,4],impliesconvert:[3,6],impliesdeltaconvert:[3,6],impliestruth:3,includ:1,index:8,ineffici:6,info:11,instal:[1,8],interpret:[2,5,6,10],is_tru:2,issu:1,just:1,keep:1,kwarg:[2,3],label:[2,6],languag:[7,11],last:[3,4,5],lastsymbol:3,ldlf:[2,7,10,11],ldlfand:6,ldlfatom:6,ldlfbox:6,ldlfcommbinaryoper:6,ldlfdiamond:6,ldlfend:6,ldlfequival:6,ldlfformula:[2,6,11],ldlfimpli:6,ldlflast:6,ldlflexer:4,ldlflogicalfals:6,ldlflogicaltru:6,ldlfnot:6,ldlfor:6,ldlfparser:[4,11],ldlfproposit:6,ldlftemporalformula:6,ldlftemporalformulannf:6,lead:8,length:5,less:6,level:2,lexer:[3,4],librari:11,licens:11,linear:[7,11],list:[1,2,5],littl:1,local:1,logic:[7,11],logical_fals:3,logical_tru:3,look:[1,11],lparen:4,ltlf:[2,7,10,11],ltlf_last:3,ltlfalwai:6,ltlfand:6,ltlfatom:6,ltlfcommbinaryoper:6,ltlfend:6,ltlfequival:6,ltlfeventu:6,ltlffals:6,ltlfformula:6,ltlfimpli:6,ltlflexer:4,ltlfnext:6,ltlfnot:6,ltlfor:6,ltlfparser:[4,11],ltlfreleas:6,ltlftemporalformula:6,ltlftrue:6,ltlftruth:6,ltlfuntil:6,ltlfweaknext:6,maintain:1,major:1,make:[1,2],make_transit:2,mani:1,marco:0,marcofavorito:[1,9,11],master:9,meet:1,method:9,might:[1,11],min:6,minim:[2,6],minimal_model:6,minor:1,misc:[2,6,10],mit:11,mkvirtualenv:1,model:6,modul:[8,10],more:1,most:9,name:[1,3],narrow:1,need:[2,11],negat:[3,6],next:[3,4],nfa:[2,7,11],nnf:[2,6,10],none:[0,2,3,6],notic:11,notnnf:[3,6],nottruth:[3,6],now:1,number:6,obj_factori:[2,3],objconstructor:[2,3],object:[2,3,5,6,11],objfactori:[2,3],obtain:2,offici:1,on_the_fli:6,onc:9,open:1,oper:[1,3],operator_symbol:[3,6],org:1,origin:1,ortruth:[3,6],other:1,our:2,over:11,p_error:3,p_expr_paren:4,p_formula:4,p_formula_and:4,p_formula_atom:4,p_formula_equival:4,p_formula_express:4,p_formula_impli:4,p_formula_not:4,p_formula_or:4,p_path:4,p_proposit:4,p_temp_formula:4,packag:[8,10,11],page:8,param:2,pars:[2,4,7,10,11],parsed_formula:11,parser:[2,3,10,11],part:1,pass:1,patch:1,path:4,path_sequ:3,path_star:3,path_test:3,path_union:3,pip:[1,9,11],pl_formula:6,pland:6,platom:[2,6],plbinaryoper:6,plcommbinaryoper:6,pleas:[1,11],plequival:6,plfals:6,plfalseinterpret:5,plformula:6,plimpli:6,pllexer:4,plnot:6,plor:6,plparser:4,pltrue:6,pltrueinterpret:5,pltruth:6,pos:[5,6],posit:5,possibl:[1,6],post:1,powerset:2,preced:3,predicatesymbol:3,prefer:9,print:11,process:9,project:[1,11,12],propos:1,proposit:[4,6,7,11],pull:8,pull_request:1,push:1,put:1,pypackag:11,pypi:[1,7,11],pythomata:[2,11],python:[1,9,11],readi:1,readm:1,readthedoc:11,recent:9,regexpformula:6,regexpproposit:6,regexpsequ:6,regexpstar:6,regexptest:6,regexptruth:6,regexpunion:6,releas:[3,4,7,8],rememb:1,remind:1,repo:[1,9,11],repositori:9,repres:3,reproduc:1,request:8,requir:11,reserv:4,reset:2,retriev:2,round_bracket_left:3,round_bracket_right:3,rparen:4,rst:1,run:[1,9],same:[2,11],scope:1,search:8,segment:5,semant:[2,3,6,7,10,11],send:1,seq:4,sequenc:[3,6],set:[1,2,3,5,6],setup:[1,9],should:1,simplifi:3,simul:2,size:6,softwar:11,some:11,sourc:[2,3,4,5,6,8],stabl:8,star:4,start:[5,6,8],step:[1,11],str:[3,5],string:3,submodul:10,subpackag:10,subset:1,support:[1,7,11],sure:1,sym2regexp:2,sym:2,symbol:[2,5,6,10,11],symbol_str:3,syntax:[2,7,10,11],system:1,t_alwai:4,t_and:4,t_atom:4,t_boxlsepar:4,t_boxrsepar:4,t_diamondlsepar:4,t_diamondrsepar:4,t_equival:4,t_error:3,t_eventu:4,t_ignor:3,t_impli:4,t_lparen:4,t_newlin:3,t_next:4,t_not:4,t_or:4,t_releas:4,t_rparen:4,t_seq:4,t_star:4,t_test:4,t_union:4,t_until:4,tag:1,tarbal:9,temp_formula:4,templat:11,tempor:11,temporal_bracket:6,termin:9,test:[1,4],test_flloat:1,thei:1,them:[1,2],thi:[1,2,9,11],through:[1,9],tip:8,to_automaton:[2,6,11],to_automaton_:2,to_dot:11,to_ldlf:6,to_nnf:3,token:[3,4],top:2,tox:1,trace:[2,5,7,11],transform:11,travi:1,trivial:6,troubleshoot:1,truesymbol:3,truth:[2,5,6,10,11],type:8,unaryoper:[3,6],union:4,until:[3,4],updat:1,usag:8,use:[1,8,12],util:[3,10],veri:6,version:1,virtualenv:1,virtualenvwrapp:1,volunt:1,wai:1,want:1,weak_next:[3,4],web:1,websit:1,welcom:1,when:1,whether:1,which:2,whoever:1,why:0,word_accept:[2,11],work:1,would:1,wrap:3,yet:0,you:[1,2,9,11],your:[1,9],your_name_her:1,z_0:4},titles:["Credits","Contributing","flloat package","flloat.base package","flloat.parser package","flloat.semantics package","flloat.syntax package","History","Welcome to FLLOAT\u2019s documentation!","Installation","flloat","FLLOAT","Usage"],titleterms:{alphabet:3,base:3,bug:1,content:[2,3,4,5,6],contribut:1,contributor:0,convert:3,credit:[0,11],deploi:1,develop:0,document:[1,8],featur:[1,11],feedback:1,fix:1,flloat:[2,3,4,5,6,8,10,11],formula:3,from:9,get:1,guidelin:1,hashabl:3,histori:7,how:11,implement:1,indic:8,instal:[9,11],interpret:3,ldlf:[4,5,6],lead:0,ltlf:[4,6],misc:3,modul:[2,3,4,5,6],nnf:3,packag:[2,3,4,5,6],pars:3,parser:4,pull:1,releas:9,report:1,request:1,semant:5,sourc:9,stabl:9,start:1,submit:1,submodul:[2,3,4,5,6],subpackag:2,symbol:3,syntax:6,tabl:8,tip:1,truth:3,type:1,usag:12,use:11,util:2,welcom:8,write:1}})